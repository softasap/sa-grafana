---
  - block:
    - name: Grafana | Install python-pycurl
      apt: pkg=apt-transport-https state=present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    - name: Grafana | Add GPG key to apt keyring
      apt_key: url=https://packages.grafana.com/gpg.key  state=present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    - name: Grafana | Add Debian apt repository
      apt_repository: repo="deb https://packages.grafana.com/oss/deb stable main" state=present update_cache=yes
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    - name: Grafana | Install
      apt: update-cache=yes pkg=grafana state=present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana
    when: ansible_os_family == "Debian"

  - block:

    - name: Grafana | Yum repository
      yum_repository:
        name: grafana
        description: Grafana upstream yum repo
        baseurl: "https://packagecloud.io/grafana/stable/el/$releasever/$basearch"
        gpgcheck: yes
        gpgkey: "https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana"
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    - name: Enable Import RPM key
      rpm_key:
        key: "https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana"
        state: present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    - name: Install packages
      package:
        name: grafana
        state: present
      retries: 3
      register: result
      until: result is not failed
      become: yes
      tags:
        - grafana

    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Grafana | Patch basic settings /etc/grafana/grafana.ini
    lineinfile:
      dest: /etc/grafana/grafana.ini
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter | default(omit) }}"
    with_items: "{{ grafana_setup_properties | default([]) }}"
    notify: restart grafana
    become: yes
    tags:
     - grafana

  - name: Grafana | Patch сustom settings /etc/grafana/grafana.ini
    lineinfile:
      dest: /etc/grafana/grafana.ini
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter | default(omit) }}"
    with_items: "{{ grafana_properties | default([]) }}"
    notify: restart grafana
    become: yes
    tags:
     - grafana


  - name: Grafana | Restart
    action: service name=grafana-server state=restarted enabled=yes
    become: yes
    when: docker_test is not defined
    tags:
      - grafana
